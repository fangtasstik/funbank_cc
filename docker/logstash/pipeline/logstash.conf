input {
  beats {
    port => 5044
  }
  
  tcp {
    port => 5000
    codec => json_lines
  }
  
  udp {
    port => 5000
    codec => json_lines
  }
}

filter {
  # Parse JSON logs from Spring Boot applications
  if [fields][service] {
    mutate {
      add_field => { "service_name" => "%{[fields][service]}" }
    }
  }
  
  # Parse Spring Boot log pattern
  if [message] =~ /^\d{4}-\d{2}-\d{2}/ {
    grok {
      match => { 
        "message" => "%{TIMESTAMP_ISO8601:timestamp} \[%{DATA:thread}\] %{LOGLEVEL:level}%{SPACE}%{DATA:logger} - %{GREEDYDATA:log_message}"
      }
    }
    
    date {
      match => [ "timestamp", "yyyy-MM-dd HH:mm:ss.SSS", "yyyy-MM-dd HH:mm:ss" ]
    }
  }
  
  # Add banking-specific fields
  if [service_name] =~ /funbank/ {
    mutate {
      add_tag => [ "banking", "microservice" ]
    }
  }
  
  # Security event detection
  if [log_message] =~ /(authentication|authorization|login|logout|jwt|token)/ {
    mutate {
      add_tag => [ "security" ]
    }
  }
  
  # Error detection
  if [level] in ["ERROR", "FATAL"] {
    mutate {
      add_tag => [ "error" ]
    }
  }
  
  # Transaction detection
  if [log_message] =~ /(transaction|transfer|payment|account|balance)/ {
    mutate {
      add_tag => [ "transaction" ]
    }
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "funbank-logs-%{+YYYY.MM.dd}"
    
    # Create separate indices for different log types
    if "error" in [tags] {
      index => "funbank-errors-%{+YYYY.MM.dd}"
    } else if "security" in [tags] {
      index => "funbank-security-%{+YYYY.MM.dd}"
    } else if "transaction" in [tags] {
      index => "funbank-transactions-%{+YYYY.MM.dd}"
    }
  }
  
  # Output to console for debugging
  stdout { 
    codec => rubydebug 
  }
}